/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/Adverts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["AdvertResponse"][];
                        "application/json": components["schemas"]["AdvertResponse"][];
                        "text/json": components["schemas"]["AdvertResponse"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "multipart/form-data": {
                        Offering?: boolean;
                        Location?: string;
                        Description?: string;
                        /** Format: date-time */
                        DateCreated?: string;
                        /** Format: uuid */
                        UserId?: string;
                        /** Format: uuid */
                        "User.Id"?: string;
                        "User.Name"?: string;
                        "User.Email"?: string;
                        "User.About"?: string;
                        /** Format: binary */
                        Photo?: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Adverts/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Advert"];
                        "application/json": components["schemas"]["Advert"];
                        "text/json": components["schemas"]["Advert"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Contact": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ContactFormModel"];
                    "text/json": components["schemas"]["ContactFormModel"];
                    "application/*+json": components["schemas"]["ContactFormModel"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Image/Upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "multipart/form-data": {
                        /** Format: binary */
                        media?: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Image/{mediaName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    mediaName: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Advert: {
            /** Format: uuid */
            id?: string;
            /** Format: uuid */
            userId?: string;
            user?: components["schemas"]["User"];
            offering?: boolean;
            location?: string | null;
            imgUrl?: string | null;
            description?: string | null;
            /** Format: date-time */
            dateCreated?: string;
        };
        AdvertResponse: {
            /** Format: uuid */
            id?: string;
            /** Format: uuid */
            userId?: string;
            offering?: boolean;
            location?: string | null;
            imgUrl?: string | null;
            description?: string | null;
            /** Format: date-time */
            dateCreated?: string;
            user?: components["schemas"]["UserResponse"];
        };
        ContactFormModel: {
            name?: string | null;
            email?: string | null;
            subject?: string | null;
            message?: string | null;
        };
        User: {
            /** Format: uuid */
            id?: string;
            name?: string | null;
            email?: string | null;
            about?: string | null;
        };
        UserResponse: {
            /** Format: uuid */
            id?: string;
            name?: string | null;
            email?: string | null;
            about?: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
